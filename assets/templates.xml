<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.constructorcomment_context" deleted="false" description="Comment for created constructors" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.constructorcomment" name="constructorcomment">/**----------------------------------------------------------------------------
** \fn        int private_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param : &lt;description du parametre&gt;.
** \param     second_param : &lt;description du parametre&gt;.
**
** \return    Description du parametre de retour.
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (${user})
** \since     Modifiee le ${date} (${user}) - &lt;Descriptif modification&gt;
** \date      ${date}
**---------------------------------------------------------------------------*/</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.destructorcomment_context" deleted="false" description="Comment for created destructors" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.destructorcomment" name="destructorcomment">/**----------------------------------------------------------------------------
** \fn        int private_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param : &lt;description du parametre&gt;.
** \param     second_param : &lt;description du parametre&gt;.
**
** \return    Description du parametre de retour.
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (${user})
** \since     Modifiee le ${date} (${user}) - &lt;Descriptif modification&gt;
** \date      ${date}
**---------------------------------------------------------------------------*/</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.filecomment_context" deleted="false" description="Comment for created C/C++ files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.filecomment" name="filecomment">/* ****************************************************************************
**                                                                           **
**                Copyright (c) 1999 - 2019 by E.A.S.                        **
**              (group CAP MONETIQUE), All Rights Reserved                   **
**                                                                           **
**                        Version 1.0.0   ${date}                       **
**                                                                           **
** ***************************************************************************/
/** ***************************************************************************
** \file        ${file_name}
** \brief       Fichier de declaration(.h)/definition(.c) .....                                 
**
** \author      ${user}
** \version     1.0.0
** \since       Cree le ${date} (&lt;initiales developpeur&gt;)
** \since       Modifie le ${date} (&lt;initiales developpeur&gt;) - &lt;Descriptif modification&gt;
** \date        ${date}
******************************************************************************/</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.typecomment_context" deleted="false" description="Comment for created classes" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.typecomment" name="typecomment">/*
 *
 */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.fieldcomment_context" deleted="false" description="Comment for fields" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.fieldcomment" name="fieldcomment">/*
 *
 */</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.methodcomment_context" deleted="false" description="Comment for methods" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.methodcomment" name="methodcomment">/**----------------------------------------------------------------------------
** \fn        int private_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param : &lt;description du parametre&gt;.
** \param     second_param : &lt;description du parametre&gt;.
**
** \return    Description du parametre de retour.
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (${user})
** \since     Modifiee le ${date} (${user}) - &lt;Descriptif modification&gt;
** \date      ${date}
**---------------------------------------------------------------------------*/</template><template autoinsert="true" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="Default template for newly created C++ source files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cppsourcefile" name="Default C++ source template">${filecomment}
${includes}

${namespace_begin}

${declarations}

${namespace_end}</template><template autoinsert="true" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="Default template for newly created C++ test files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cpptestfile" name="Default C++ test template">${filecomment}
${includes}

${namespace_begin}

${declarations}

${namespace_end}</template><template autoinsert="true" context="org.eclipse.cdt.core.cxxHeader.contenttype_context" deleted="false" description="Default template for newly created C++ header files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cppheaderfile" name="Default C++ header template">${filecomment}
#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}

${includes}

${namespace_begin}

${declarations}

${namespace_end}

#endif /* ${include_guard_symbol} */</template><template autoinsert="true" context="org.eclipse.cdt.core.cSource.contenttype_context" deleted="false" description="Default template for newly created C source files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.csourcefile" name="Default C source template">${filecomment}
${includes}

${declarations}</template><template autoinsert="true" context="org.eclipse.cdt.core.cHeader.contenttype_context" deleted="false" description="Default template for newly created C header files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cheaderfile" name="Default C header template">${filecomment}
#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}

${includes}

${declarations}

#endif /* ${include_guard_symbol} */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.namespace_context" deleted="false" description="Beginning of namespace declaration" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.namespace_begin" name="namespace_begin">namespace ${namespace_name} {</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.namespace_context" deleted="false" description="End of namespace declaration" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.namespace_end" name="namespace_end">} /* namespace ${namespace_name} */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.class_context" deleted="false" description="Code in created class definitions" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.class_body" name="class_body">${declarations}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.methodbody_context" deleted="false" description="Code in created method stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.methodbody" name="methodbody">	// ${todo} Auto-generated method stub
	${body_statement}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.constructorbody_context" deleted="false" description="Code in created constructor stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.constructorbody" name="constructorbody">	// ${todo} Auto-generated constructor stub
	${body_statement}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.destructorbody_context" deleted="false" description="Code in created destructor stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.destructorbody" name="destructorbody">	${body_statement}
	// ${todo} Auto-generated destructor stub</template><template autoinsert="true" context="org.eclipse.cdt.core.asmSource.contenttype_context" deleted="false" description="Default template for newly created assembly files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.asmsourcefile" name="Default assembly template">${filecomment}
</template><template autoinsert="true" context="org.eclipse.core.runtime.text.contenttype_context" deleted="false" description="Default template for newly created text files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.textfile" name="Default text file template">${file_name}
 Created on: ${date}
     Author: ${user}

</template><template autoinsert="false" context="org.eclipse.cdt.core.cSource.contenttype_context" deleted="false" description="" enabled="true" name="EAS C source template">${filecomment}
/******************************************************************************
*                            LIBRAIRIES
******************************************************************************/
#include &lt; &gt;
#include "" 

/** \addtogroup &lt;espace_de_nom&gt;
 * \{
 */
/** \addtogroup Private
 * \{
 */
/******************************************************************************
*                         CONSTANTES
******************************************************************************/
/** \addtogroup Private_Constants
 * \{
 *****************************************************************************/
#define CONSTANT    xxx            /*!&lt; Descriptif de la constante */

/**
* \enum  &lt;name&gt;
* \brief &lt;Descriptif de l'enumeration&gt;
----------------------------------------------------------------------------*/
enum CONSTANT_LIST {
    CONSTANT_1 = 0x01,             /*!&lt; Descriptif de la constante 1 */
    CONSTANT_2 = 0x02,             /*!&lt; Descriptif de la constante 2 */
    CONSTANT_2 = 0x04,             /*!&lt; Descriptif de la constante 3 */
    ....
};
/**
 * \}
 */
/******************************************************************************
*                         VARIABLES PRIVEES
******************************************************************************/
/** \addtogroup Private_Variables
 * \{
 */
static int16_t    a_integer;       /*!&lt; Descriptif de la variable */

/**
 * \}
 */
/******************************************************************************
*                        STRUCTURES ET TYPES DEFINIS
******************************************************************************/
/** \addtogroup Private_Structures
 * \{
 *****************************************************************************/
/**
 * \struct &lt;name&gt; [&lt;header-file&gt;] [&lt;header-name&gt;]
 * \brief  &lt;Descriptif de la structure&gt;
 ----------------------------------------------------------------------------*/
struct &lt;name&gt; 
{
   &lt;a_type&gt;    &lt;variable&gt;;    /*!&lt; Descriptif de la variable   */
};

/**
 * \}
 */
/** \addtogroup Private_Types
 * \{
 *****************************************************************************/
/**
 * \typedef &lt;type&gt;_t
 * \brief   &lt;Descriptif du type&gt;
 ----------------------------------------------------------------------------*/
typedef struct &lt;nom_struct&gt; &lt;type&gt;_t;
/**
 * \}
 */
/******************************************************************************
*                         VARIABLES EXTERNES
******************************************************************************/
/** \addtogroup Private_References
 * \{
 *****************************************************************************/
extern uint8_t    a_var;

/******************************************************************************
*                  PROTOTYPES DE FONCTIONS PRIVEES
******************************************************************************/
void private_func(void);
/**
 * \}
 */
/**
 * \}
 */
/******************************************************************************
*                        FONCTIONS PUBLIQUES
******************************************************************************/
/** \addtogroup Public
 * \{
 */
/** \addtogroup Public_Functions
 * \{
 *****************************************************************************/
/*---------------------------------------------------------------------------*/
void my_function (void)
/*---------------------------------------------------------------------------*/
{

}
/**
 * \}
 */
/**
 * \}
 */
/******************************************************************************
*                        FONCTIONS PRIVEES
******************************************************************************/
/** \addtogroup Private
 * \{
 */
/** \addtogroup Private_Functions
 * \{
 *****************************************************************************/
/**----------------------------------------------------------------------------
** \fn        int private_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param : &lt;description du parametre&gt;.
** \param     second_param : &lt;description du parametre&gt;.
**
** \return     Description du parametre de retour.
** \retval     Valeur de retour.
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (&lt;initiales développeur&gt;)
** \since     Modifiee le ${date} (&lt;initiales developpeur&gt;) - &lt;Descriptif modification&gt;
** \date      ${date}
**
**---------------------------------------------------------------------------*/
int private_function (char first_param, int second_param)
{

}
/**
 * \}
 */
/**
 * \}
 */
/**
 * \}
 */</template><template autoinsert="false" context="org.eclipse.cdt.core.cHeader.contenttype_context" deleted="false" description="" enabled="true" name="EAS C header template">#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}
${filecomment}
${includes}
#include "common.h" 
/** \addtogroup &lt;espace_de_nom&gt;
 * \{
 */
/** \addtogroup Public
 * \{
 */
/******************************************************************************
*                         CONSTANTES
******************************************************************************/
/** \addtogroup Public_Constants
 * \{
 *****************************************************************************/
#define CONSTANT    xxx            /*!&lt; Descriptif de la constante */

/**
 * \enum  &lt;name&gt;
 * \brief &lt;Descriptif de l'enumeration&gt;
 *****************************************************************************/
enum CONSTANT_LIST {
    CONSTANT_1 = 0x01,             /*!&lt; Descriptif de la constante 1 */
    CONSTANT_2 = 0x02,             /*!&lt; Descriptif de la constante 2 */
    CONSTANT_2 = 0x04,             /*!&lt; Descriptif de la constante 3 */
    ....
};

/**
 * \}
 */
/******************************************************************************
*                        STRUCTURES ET TYPES DEFINIS
******************************************************************************/
/** \addtogroup Public_Structures
 * \{
 *****************************************************************************/
/**
 * \struct &lt;name&gt; [&lt;header-file&gt;] [&lt;header-name&gt;]
 * \brief  &lt;Descriptif de la structure&gt;
 ----------------------------------------------------------------------------*/
struct &lt;name&gt; 
{
   &lt;a_type&gt;    &lt;variable&gt;;    /*!&lt; Descriptif de la variable   */
};
/**
 * \}
 */

/** \addtogroup Public_Types
 * \{
 ******************************************************************************/

/**
 * \typedef &lt;type&gt;_t
 * \brief   &lt;Descriptif du type&gt;
 -----------------------------------------------------------------------------*/
typedef struct &lt;nom_struct&gt; &lt;type&gt;_t;
/**
 * \}
 */

/**
 * \}
 */
/******************************************************************************
*                       PROTOTYPES DES FONCTIONS PUBLIQUES
******************************************************************************/
/** \addtogroup Public_Functions
 * \{
 *****************************************************************************/
/**----------------------------------------------------------------------------
** \fn        int public_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param &lt;description du parametre&gt;.
** \param     second_param &lt;description du parametre&gt;.
**
** \return    Description du parametre de retour.
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (&lt;initiales développeur&gt;)
** \since     Modifiee le ${date} (&lt;initiales developpeur&gt;) - &lt;Descriptif modification&gt;
** \date      ${date}
**---------------------------------------------------------------------------*/
int public_function (char first_param, int second_param);

/**
 * \}
 */
/**
 * \}
 */
/**
 * \}
 */
#endif /* ${include_guard_symbol} */</template><template autoinsert="false" context="org.eclipse.core.runtime.text.contenttype_context" deleted="false" description="" enabled="true" name="gitignore C"># Object files
*.o
*.ko
*.obj
*.elf

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
</template><template autoinsert="false" context="org.eclipse.core.runtime.text.contenttype_context" deleted="false" description="" enabled="true" name="gitignore C++"># Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app
</template><template autoinsert="false" context="org.eclipse.cdt.core.cxxHeader.contenttype_context" deleted="false" description="" enabled="true" name="EAS C++ header template">#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}
${filecomment}
${includes}

/** \addtogroup ${project_name}
 * \{
 */
/** \addtogroup Public
 * \{
 */
/******************************************************************************
*                         CONSTANTES
******************************************************************************/
/** \addtogroup Public_Constants
 * \{
 *****************************************************************************/
#define CONSTANT    xxx            /*!&lt; Descriptif de la constante */

/**
 * \enum  &lt;name&gt;
 * \brief &lt;Descriptif de l'enumeration&gt;
 *****************************************************************************/
enum CONSTANT_LIST {
    CONSTANT_1 = 0x01,             /*!&lt; Descriptif de la constante 1 */
    CONSTANT_2 = 0x02,             /*!&lt; Descriptif de la constante 2 */
    CONSTANT_2 = 0x04,             /*!&lt; Descriptif de la constante 3 */
    ....
};

/** ****************************** End Public_Constants ***********************
 * \}
 */
/******************************************************************************
*                        STRUCTURES ET TYPES DEFINIS
******************************************************************************/
/** \addtogroup Public_Structures
 * \{
 *****************************************************************************/
/**
 * \struct &lt;name&gt; [&lt;header-file&gt;] [&lt;header-name&gt;]
 * \brief  &lt;Descriptif de la structure&gt;
 ----------------------------------------------------------------------------*/
struct &lt;name&gt; 
{
   &lt;a_type&gt;    &lt;variable&gt;;    /*!&lt; Descriptif de la variable   */
};
/** ***************************** End Public_Structures ***********************
 * \}
 */

/** \addtogroup Public_Classes
 * \{
 *****************************************************************************/
/**
 * \class &lt;name&gt; [&lt;header-file&gt;] [&lt;header-name&gt;]
 * \brief  &lt;Descriptif de la classe&gt;
 ----------------------------------------------------------------------------*/\
class &lt;name&gt;
{
public:

protected:

private:

}
/** ***************************** End Public_Classes ***********************
 * \}
 */
/** \addtogroup Public_Types
 * \{
 ******************************************************************************/
/**
 * \typedef &lt;type&gt;_t
 * \brief   &lt;Descriptif du type&gt;
 -----------------------------------------------------------------------------*/
typedef struct &lt;nom_struct&gt; &lt;type&gt;_t;
/** ******************************** End Public_Types *************************
 * \}
 */

/******************************************************************************
*                       PROTOTYPES DES FONCTIONS PUBLIQUES
******************************************************************************/
/** \addtogroup Publics_Functions
 * \{
 *****************************************************************************/
/**----------------------------------------------------------------------------
** \fn        int public_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param &lt;description du parametre&gt;.
** \param     second_param &lt;description du parametre&gt;.
**
** \return    Description du parametre de retour.
** \retval    0 &lt;eventuelle valeur de retour&gt;
** \retval    1 &lt;eventuelle valeur de retour&gt;
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (&lt;initiales développeur&gt;)
** \since     Modifiee le ${date} (&lt;initiales developpeur&gt;) - &lt;Descriptif modification&gt;
** \date      ${date}
**---------------------------------------------------------------------------*/
int public_function (char first_param, int second_param);

/** ***************************** End Public_Functions ************************
 * \}
 */
/** *********************************** End Public ****************************
 * \}
 */
/** ******************************** End Project File *************************
 * \}
 */
#endif /* ${include_guard_symbol} */</template><template autoinsert="false" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="" enabled="true" name="EAS C++ source template">${filecomment}
/******************************************************************************
*                            LIBRAIRIES
******************************************************************************/
${includes}
#include "${file_base}.h"

/** \addtogroup ${project_name}
 * \{
 */
/** \addtogroup Private
 * \{
 */
/******************************************************************************
*                         CONSTANTES
******************************************************************************/
/** \addtogroup Private_Constants
 * \{
 *****************************************************************************/
#define CONSTANT    xxx            /*!&lt; Descriptif de la constante */

/**
* \enum  &lt;name&gt;
* \brief &lt;Descriptif de l'enumeration&gt;
----------------------------------------------------------------------------*/
enum CONSTANT_LIST {
    CONSTANT_1 = 0x01,             /*!&lt; Descriptif de la constante 1 */
    CONSTANT_2 = 0x02,             /*!&lt; Descriptif de la constante 2 */
    CONSTANT_2 = 0x04,             /*!&lt; Descriptif de la constante 3 */
    ....
};
/** ************************* End Private_Constants ***************************
 * \}
 */
/******************************************************************************
*                        STRUCTURES ET TYPES DEFINIS
******************************************************************************/
/** \addtogroup Private_Structures
 * \{
 *****************************************************************************/
/**
 * \struct &lt;name&gt; [&lt;header-file&gt;] [&lt;header-name&gt;]
 * \brief  &lt;Descriptif de la structure&gt;
 ----------------------------------------------------------------------------*/
struct &lt;name&gt; 
{
   &lt;a_type&gt;    &lt;variable&gt;;    /*!&lt; Descriptif de la variable   */
};

/** ************************* End Private_Structures **************************
 * \}
 */

/** \addtogroup Private_Types
 * \{
 *****************************************************************************/
/**
 * \typedef &lt;type&gt;_t
 * \brief   &lt;Descriptif du type&gt;
 ----------------------------------------------------------------------------*/
typedef struct &lt;nom_struct&gt; &lt;type&gt;_t;
/** **************************** End Private_Types ***************************
 * \}
 */
/** **************************** End Private *********************************
 * \}
 */
/******************************************************************************
*                        FONCTIONS PUBLIQUES
******************************************************************************/
/** \addtogroup Public
 * \{
 */
/** \addtogroup Public_Functions
 * \{
 *****************************************************************************/
/*---------------------------------------------------------------------------*/
void &lt;classe_name&gt;::my_function (void)
/*---------------------------------------------------------------------------*/
{

}
/** ************************** End Public_Functions ***************************
 * \}
 */
/** ******************************* End Public ********************************
 * \}
 */
/******************************************************************************
*                        FONCTIONS PRIVEES
******************************************************************************/
/** \addtogroup Private
 * \{
 */
/** \addtogroup Private_Functions
 * \{
 *****************************************************************************/
/**----------------------------------------------------------------------------
** \fn        int private_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param : &lt;description du parametre&gt;.
** \param     second_param : &lt;description du parametre&gt;.
**
** \return    Description du parametre de retour.
** \retval    0 &lt;eventuelle valeur de retour&gt;
** \retval    1 &lt;eventuelle valeur de retour&gt;
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (&lt;initiales développeur&gt;)
** \since     Modifiee le ${date} (&lt;initiales developpeur&gt;) - &lt;Descriptif modification&gt;
** \date      ${date}
**
**---------------------------------------------------------------------------*/
int &lt;class_name&gt;::private_function (char first_param, int second_param)
{

}
/** ************************* End Private_Functions ***************************
 * \}
 */
/** ****************************** End Private ********************************
 * \}
 */
/** **************************** End Project File *****************************
 * \}
 */</template><template autoinsert="false" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="" enabled="true" name="EAS C++ Source Template">/* ****************************************************************************
**                                                                           **
**                Copyright (c) 1999 - 2016 by E.A.S.                        **
**              (group CAP MONETIQUE), All Rights Reserved                   **
**                                                                           **
**                      Version 1.0.0.0   ${date}                            **
**                                                                           **
** ***************************************************************************/
/******************************************************************************
** \file        ${file_name}
** \brief       Fichier de définition de la classe .......
**
** \author      ${user}
** \version     1.0.0
** \since       Cree le ${date} (&lt;initiales developpeur&gt;)
** \since       Modifiee le ${date} (&lt;initiales developpeur&gt;) - &lt;Descriptif modification&gt;
** \date        ${date}
**
******************************************************************************/
/******************************************************************************
*                            LIBRAIRIES
******************************************************************************/
#include &lt; &gt;
#include "" 

/** \addtogroup &lt;espace_de_nom&gt;
 * \{
 */
/** \addtogroup Private
 * \{
 */
/******************************************************************************
*                         CONSTANTES
******************************************************************************/
/** \addtogroup Private Constants
 * \{
 *****************************************************************************/
#define CONSTANT    xxx            /*!&lt; Descriptif de la constante */

/**
* \enum  &lt;name&gt;
* \brief &lt;Descriptif de l'enumeration&gt;
----------------------------------------------------------------------------*/
enum CONSTANT_LIST {
    CONSTANT_1 = 0x01,             /*!&lt; Descriptif de la constante 1 */
    CONSTANT_2 = 0x02,             /*!&lt; Descriptif de la constante 2 */
    CONSTANT_2 = 0x04,             /*!&lt; Descriptif de la constante 3 */
    ....
};
/**
 * \}
 */
/******************************************************************************
*                         VARIABLES PRIVEES
******************************************************************************/
/** \addtogroup Private_Variables
 * \{
 */
static int16_t    a_integer;       /*!&lt; Descriptif de la variable */

/**
 * \}
 */
/******************************************************************************
*                        STRUCTURES ET TYPES DEFINIS
******************************************************************************/
/** \addtogroup Private_Structures
 * \{
 *****************************************************************************/
/**
 * \struct &lt;name&gt; [&lt;header-file&gt;] [&lt;header-name&gt;]
 * \brief  &lt;Descriptif de la structure&gt;
 ----------------------------------------------------------------------------*/
struct &lt;name&gt; 
{
   &lt;a_type&gt;    &lt;variable&gt;;    /*!&lt; Descriptif de la variable   */
};

/**
 * \}
 */
/** \addtogroup Private_Types
 * \{
 *****************************************************************************/
/**
 * \typedef &lt;type&gt;_t
 * \brief   &lt;Descriptif du type&gt;
 ----------------------------------------------------------------------------*/
typedef struct &lt;nom_struct&gt; &lt;type&gt;_t;
/**
 * \}
 */
/******************************************************************************
*                         VARIABLES EXTERNES
******************************************************************************/
/** \addtogroup Private_References
 * \{
 *****************************************************************************/
extern uint8_t    a_var;

/******************************************************************************
*                  PROTOTYPES DE FONCTIONS PRIVEES
******************************************************************************/
void private_func(void);
/**
 * \}
 */
/**
 * \}
 */
/******************************************************************************
*                        FONCTIONS PUBLIQUES
******************************************************************************/
/** \addtogroup Public
 * \{
 */
/** \addtogroup Public_Functions
 * \{
 *****************************************************************************/
/*---------------------------------------------------------------------------*/
void my_function (void)
/*---------------------------------------------------------------------------*/
{

}
/**
 * \}
 */
/**
 * \}
 */
/******************************************************************************
*                        FONCTIONS PRIVEES
******************************************************************************/
/** \addtogroup Private
 * \{
 */
/** \addtogroup Private_Functions
 * \{
 *****************************************************************************/
/**----------------------------------------------------------------------------
** \fn        int private_function(char first_param, int second_param)
**            
** \brief     Description de la fonction.
**
** \param     first_param : &lt;description du parametre&gt;.
** \param     second_param : &lt;description du parametre&gt;.
**
** \return     Description du parametre de retour.
** \retval     Valeur de retour.
**
** \author    ${user}
** \version   1.0.0
** \since     Cree le ${date} (&lt;initiales développeur&gt;)
** \since     Modifiee le ${date} (&lt;initiales developpeur&gt;) - &lt;Descriptif modification&gt;
** \date      ${date}
**
**---------------------------------------------------------------------------*/
int private_function (char first_param, int second_param)
{

}
/**
 * \}
 */
/**
 * \}
 */
/**
 * \}
 */</template></templates>